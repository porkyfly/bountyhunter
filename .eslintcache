[{"/Users/tyler/projects/bountyhunter/src/index.js":"1","/Users/tyler/projects/bountyhunter/src/reportWebVitals.js":"2","/Users/tyler/projects/bountyhunter/src/App.js":"3","/Users/tyler/projects/bountyhunter/src/components/Bounty/Evidence.js":"4","/Users/tyler/projects/bountyhunter/src/Map.js":"5"},{"size":500,"mtime":1609172929912,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1608323139425,"results":"8","hashOfConfig":"7"},{"size":3444,"mtime":1609481149706,"results":"9","hashOfConfig":"7"},{"size":428,"mtime":1609474014430,"results":"10","hashOfConfig":"7"},{"size":900,"mtime":1609480950039,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"vacqzo",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"14"},"/Users/tyler/projects/bountyhunter/src/index.js",[],["27","28"],"/Users/tyler/projects/bountyhunter/src/reportWebVitals.js",[],"/Users/tyler/projects/bountyhunter/src/App.js",["29","30","31","32","33"],"import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport Evidence from './components/Bounty/Evidence';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport MyMap from './Map.js';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Marker } from '@react-google-maps/api';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      bounties: [], formTextMission: '', formTextAmount: '', formTextLat: '37.7749', formTextLong: '-122.4194'};\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  containerStyle = {\n    width: '800px',\n    height: '600px'\n  };\n  \n  center = {\n    lat: 37.7749,\n    lng: -122.4194\n  };\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Welcome, Bounty Hunter</h1>\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          <h3>Active bounties, 1mi radius:</h3>\n\n\n          <Router>\n            <div>\n              {/* render list */}\n              <ul>\n                {this.state.bounties.map(bounty => (\n                  <li>\n                      <Link className=\"App-link\" to=\"/evidence\">{bounty.mission} ${bounty.amount}</Link>\n                  </li>\n                ))}\n              </ul>\n\n              {/* route paths */}\n              <Route path=\"/evidence\">\n                <Evidence />\n              </Route>\n              <Route path=\"/map\">\n                <MyMap />\n              </Route>\n\n            </div>\n          </Router>\n\n          {/* render map */}\n          <MyMap bounties={this.state.bounties}/>\n\n          \n          {/* form input */}\n          <form onSubmit={this.handleSubmit}>\n            <input\n              name=\"formTextMission\"\n              onChange={this.handleInputChange}\n              value={this.state.formTextMission}\n            />\n            <input\n              type=\"number\"\n              name=\"formTextAmount\"\n              onChange={this.handleInputChange}\n              value={this.state.formTextAmount}\n            />\n            <input\n              type=\"number\"\n              name=\"formTextLat\"\n              onChange={this.handleInputChange}\n              value={this.state.formTextLat}\n            />\n            <input\n              type=\"number\"\n              name=\"formTextLong\"\n              onChange={this.handleInputChange}\n              value={this.state.formTextLong}\n            />\n            <button>\n              Add Bounty\n            </button>\n          </form>\n\n\n        </header>\n      </div>\n    );\n  }\n\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    //edge case handling\n    e.preventDefault();\n    if (this.state.formTextMission.length === 0 || this.state.formTextAmount.length === 0) {\n      return;\n    }\n\n    //construct new props here\n    const bounty = {\n      mission: this.state.formTextMission,\n      amount: this.state.formTextAmount,\n      lat: Number(this.state.formTextLat),\n      long: Number(this.state.formTextLong),\n      evidence: ''\n    };\n\n    //insert new bounty, clear form text\n    this.setState(state => ({\n      bounties: state.bounties.concat(bounty),\n      formTextMission: '',\n      formTextAmount: ''\n    }));\n  }\n\n}\n\n\nexport default App;\n\n\n","/Users/tyler/projects/bountyhunter/src/components/Bounty/Evidence.js",["34","35"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from \"react-router-dom\";\n\nclass Evidence extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      evidence: ''\n    }\n  }\n  //this should be the submit evidence screen\n  render() {\n    return (\n      <div>\n        Submit Completion Evidence Here\n      </div>\n    )\n    \n  }\n}\nexport default Evidence;\n",["36","37"],"/Users/tyler/projects/bountyhunter/src/Map.js",["38","39"],"import React from 'react'\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport { Marker } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '800px',\n  height: '600px'\n};\n\nconst center = {\n  lat: 37.7749,\n  lng: -122.4194\n};\n\nfunction MyMap(props) {\n    const [map, setMap] = React.useState(null)\n    return (\n        <LoadScript\n        googleMapsApiKey=\"AIzaSyCfh41ptl9vXquEdGliKP2wuRzHP380e7s\"\n        >\n        <GoogleMap\n            mapContainerStyle={containerStyle}\n            center={center}\n            zoom={15}\n        >\n            { /* Child components, such as markers, info windows, etc. */ }\n            {props.bounties.map(bounty => (\n                  <Marker\n                    position={{ lat: bounty.lat, lng: bounty.long }}\n                  />\n            ))}\n        </GoogleMap>\n        </LoadScript>\n  )\n}\n\nexport default React.memo(MyMap)",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":7,"column":3,"nodeType":"46","messageId":"47","endLine":7,"endColumn":9},{"ruleId":"44","severity":1,"message":"49","line":12,"column":10,"nodeType":"46","messageId":"47","endLine":12,"endColumn":19},{"ruleId":"44","severity":1,"message":"50","line":12,"column":21,"nodeType":"46","messageId":"47","endLine":12,"endColumn":31},{"ruleId":"44","severity":1,"message":"51","line":13,"column":10,"nodeType":"46","messageId":"47","endLine":13,"endColumn":16},{"ruleId":"44","severity":1,"message":"52","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":17},{"ruleId":"44","severity":1,"message":"53","line":3,"column":10,"nodeType":"46","messageId":"47","endLine":3,"endColumn":19},{"ruleId":"40","replacedBy":"54"},{"ruleId":"42","replacedBy":"55"},{"ruleId":"44","severity":1,"message":"56","line":16,"column":12,"nodeType":"46","messageId":"47","endLine":16,"endColumn":15},{"ruleId":"44","severity":1,"message":"57","line":16,"column":17,"nodeType":"46","messageId":"47","endLine":16,"endColumn":23},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'GoogleMap' is defined but never used.","'LoadScript' is defined but never used.","'Marker' is defined but never used.","'PropTypes' is defined but never used.","'useParams' is defined but never used.",["58"],["59"],"'map' is assigned a value but never used.","'setMap' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]